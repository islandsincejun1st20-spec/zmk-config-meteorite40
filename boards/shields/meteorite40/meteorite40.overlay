#include "meteorite40.dtsi" 
#include "meteorite40-layout.dtsi"

&LAYOUT_SPLIT_SPACE {
    transform = <&transform_split_space>;
};

&LAYOUT_2U_SPACE {
    transform = <&transform_2u_space>;
};

&LAYOUT_225U_SPACE_LEFT {
    transform = <&transform_225u_space_left>;
};

&LAYOUT_225U_SPACE_RIGHT {
    transform = <&transform_225u_space_right>;
};

&LAYOUT_225U_SPACE_DOUBLE {
    transform = <&transform_225u_space_double>;
};

/ {
    chosen {
        zmk,kscan = &meteorite40_scan;
        zmk,physical-layout = &LAYOUT_SPLIT_SPACE;
        //transform = <&default_transform>;
    };

    transform_split_space: keymap_transform_split_space {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <7>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            RC(2,0) RC(2,1) RC(2,3) RC(2,4) RC(2,5)                 RC(3,1) RC(3,2) RC(3,4) RC(3,5) RC(3,6)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,5) RC(0,6) RC(1,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,6)
                            RC(6,1) RC(6,2) RC(4,6) RC(2,6) RC(3,0) RC(5,0) RC(6,3) RC(6,4)  
        >;
    };

    transform_2u_space: keymap_transform_2u_space {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <7>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            RC(2,0) RC(2,1) RC(2,3) RC(2,4) RC(2,5)                 RC(3,1) RC(3,2) RC(3,4) RC(3,5) RC(3,6)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,5) RC(0,6) RC(1,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,6)
                            RC(6,1) RC(6,2) RC(4,6)     RC(2,6)     RC(5,0) RC(6,3) RC(6,4)  
        >;
    };

    transform_225u_space_left: keymap_transform_225u_space_left {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <7>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            RC(2,0) RC(2,1) RC(2,3) RC(2,4) RC(2,5)                 RC(3,1) RC(3,2) RC(3,4) RC(3,5) RC(3,6)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,5) RC(0,6) RC(1,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,6)
                            RC(6,1) RC(6,2)     RC(4,6)     RC(3,0) RC(5,0) RC(6,3) RC(6,4)  
        >;
    };

    transform_225u_space_right: keymap_transform_225u_space_right {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <7>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            RC(2,0) RC(2,1) RC(2,3) RC(2,4) RC(2,5)                 RC(3,1) RC(3,2) RC(3,4) RC(3,5) RC(3,6)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,5) RC(0,6) RC(1,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,6)
                            RC(6,1) RC(6,2) RC(4,6) RC(2,6)    RC(5,0)      RC(6,3) RC(6,4)  
        >;
    };

    transform_225u_space_double: keymap_transform_225u_space_double {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <7>;
        map = <
            RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            RC(2,0) RC(2,1) RC(2,3) RC(2,4) RC(2,5)                 RC(3,1) RC(3,2) RC(3,4) RC(3,5) RC(3,6)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,5) RC(0,6) RC(1,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,6)
                            RC(6,1) RC(6,2)     RC(4,6)          RC(5,0)      RC(6,3) RC(6,4)  
        >;
    };

    /*
    meteorite40_scan: kscan0 {
        compatible = "zmk,kscan-gpio-charlieplex";
        gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>,  // ID0: P0.02
                <&gpio0 3 GPIO_ACTIVE_HIGH>,  // ID1: P0.03
                <&gpio0 28 GPIO_ACTIVE_HIGH>, // ID2: P0.28
                <&gpio0 29 GPIO_ACTIVE_HIGH>, // ID3: P0.29
                <&gpio0 4 GPIO_ACTIVE_HIGH>,  // ID4: P0.04
                <&gpio0 5 GPIO_ACTIVE_HIGH>,  // ID5: P0.05
                <&gpio1 11 GPIO_ACTIVE_HIGH>; // ID6: P1.11

        interrupt-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>; // Changed to P0.09 (NFC1)
        debounce-press-ms = <DEBOUNCE_MS>;
        debounce-release-ms = <DEBOUNCE_MS>;
        poll-period-ms = <POLL_PERIOD_MS>;
        wakeup-source;
    };
    */

    encoder0: ec11_0 {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;   // RE0_A: P1.00
        b-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // RE0_B: P0.16
        steps = <24>; //4→24へ変更
        status = "okay";
    };

    encoder1: ec11_1 {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // RE1_A: P0.10 (NFC2)
        b-gpios = <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;  // RE1_B: P1.10
        steps = <24>; //4→24へ変更
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder0 &encoder1>;
        triggers-per-rotation = <1>;
    };
};
